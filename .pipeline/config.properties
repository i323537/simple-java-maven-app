# ---------------------------------------------------------------------------
# define id of cloud foundry credentials (CF_USERNAME & CF_PASSWORD)
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
cfCredentialsId=CF_CREDENTIAL
# Technical user to be used for app deployment in prod space
cfApiEndpoint=https://api.cf.sap.hana.ondemand.com
cfOrg=tiger_leodev
cfTestSpace=CI_CD_TEST
cfTestManifest=manifest-acceptance.yml

cfPerfSpace=performance-<C/D/I Number>
cfPerfManifest=manifest-performance.yml

cfProdApiEndpoint=https://api.cf.sap.hana.ondemand.com
cfProdOrg=CCCourse
cfProdSpace=production-<C/D/I Number>
cfProdUser=i323878
cfProdManifest=manifest-production.yml
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define GitHub credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
#ssh credentials for write access to git (e.g. for versioning)
gitSSHCredentials=
#"Personal access token" for access to GitHub REST API
#has to be stored in password part of the credentials
githubCredentials=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Git information - overwrite Jenkins default
# ---------------------------------------------------------------------------
gitUserName=i323878
gitUserEMail=anurag.negi@sap.com
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Cloud Access Manager (CAM) credentials
# Note: For productive deployment without CAM Credentials
#       use value of cfCredentialsId also for camCredentialsId
#       and leave camSystemRole empty
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
camCredentialsId=
# System role for your solution as maintained in SPC
camSystemRole=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define PPMS I7P credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
ppmsCredentialsId=780b3b8d-02e6-4b48-88bf-33adbe17e086
ppmsID=73554900100200010011
#whiteSourceProductName=The name of the WhiteSource product
#whiteSourceProjectNames=The name of your Whitesource project (e.g. the maven artifactId)
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
# define xMake build quality "Milestone" or "Release"
# ---------------------------------------------------------------------------
xMakeBuildQuality=Milestone
#git url of non-Abap Assemblys release fork
xMakeNaasReleaseForkRepo=
xMakeShipmentType=indirectshipment
xMakeNovaCredentialsId=xmakeNova
xMakeDevCredentialsId=xmakeDev
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
# define SourceClear credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
sourceClearCredentialsId=
# ---------------------------------------------------------------------------
# define cloud foundry environment (org, space) including application manifests
# ---------------------------------------------------------------------------


# Deprecated! can be used instead of Org & Space -> see Cloud Curriculum
#cfProdEnvConfig=path to environment.yaml
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
# Extension points - name & location of groovy files
# ---------------------------------------------------------------------------
# custom integration tests
extensionIntegrationTestScript=
# ---------------------------------------------------------------------------
# define cloud foundry application name
# ---------------------------------------------------------------------------
cfAppName=
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
# define email notification distribution list
# ---------------------------------------------------------------------------
notificationRecipients=
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
# define Checkmarx project name & groupId
# ---------------------------------------------------------------------------
checkmarxProject=Zero_Waste_LeoAccelerator
checkmarxGroupId=b75c657f-55c7-483c-ac76-9589f378fa75
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
# Control execution of OPA tests
# ---------------------------------------------------------------------------
runOpaTests=false
opaTimeout=5
modulesToCheckWithOpa=
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
# Operations-related information
# ---------------------------------------------------------------------------
# Spring Boot by default provides the endpoint /health for health checks
healthCheckUrlAcceptance=
healthCheckUrlPerformance=
healthCheckUrlProduction=
# ---------------------------------------------------------------------------
whitesourceExclude=pom.xml,srv/pom.xml,app/ZeroWasteLeoAccelerator_appRouter/*,app/ZeroWasteLeoAccelerator_ui_deployer/*,app/ZeroWasteLeoAccelerator_appRouter/package.json,app/ZeroWasteLeoAccelerator_ui_deployer/package.json,app/ZeroWasteLeoAccelerator_appRouter/xs-app.json,db/package.json
openSourceDependencyScanExclude=pom.xml,app/ZeroWasteLeoAccelerator_appRouter/package.json,app/ZeroWasteLeoAccelerator_ui_deployer/package.json,app/ZeroWasteLeoAccelerator_appRouter/xs-app.json,db/package.json
# ---------------------------------------------------------------------------
# Control execution of acceptance tests
# ---------------------------------------------------------------------------
runFunctionalAcceptanceTests=false
accTestUrl=
# git url to repository with acceptance tests. Leave empty if tests are in current repo
accTestRepository=
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
# Control execution of performance tests
# ---------------------------------------------------------------------------
runPerformanceUnitTests=false
runPerformanceJMeterTests=false
perfJMeterTestRepository=
perfJMeterTestUrl=
runPerformanceSUT=false
perfSUTRepository=
perfSUTestUrl=
#SUT output csv file, e.g.: testAngularCC.csv
perfSUTResultCSV=
#id of the SUT test case: e.g. WDTest#testAngularCC
perfSUTTestCase=
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
# define InfluxDB host
# ---------------------------------------------------------------------------
# host where InfluxDB is installed
# rest of the configuration done in Jenkins system configuration
# use empty string if no InfluxDB is used
influxDBServer=
# ---------------------------------------------------------------------------
